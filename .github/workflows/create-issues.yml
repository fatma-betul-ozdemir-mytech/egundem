const fs = require('fs');
const path = require('path');
const { Octokit } = require('@octokit/rest');

// GITHUB_TOKEN env olarak workflow'da tanƒ±mlanmalƒ±
const octokit = new Octokit({ auth: process.env.GITHUB_TOKEN });

const OWNER = process.env.GITHUB_REPOSITORY?.split('/')[0];
const REPO = process.env.GITHUB_REPOSITORY?.split('/')[1];
const REPORT_PATH = path.join(__dirname, '../../test-results/playwright-report.json');

(async () => {
  if (!fs.existsSync(REPORT_PATH)) {
    console.error('JSON test raporu bulunamadƒ±:', REPORT_PATH);
    process.exit(1);
  }

  const report = JSON.parse(fs.readFileSync(REPORT_PATH, 'utf-8'));

  const failedTests = report.suites
    .flatMap(suite => suite.specs)
    .flatMap(spec => spec.tests)
    .filter(test => test.results.some(result => result.status === 'failed'));

  if (failedTests.length === 0) {
    console.log('Hatalƒ± test bulunamadƒ±, issue a√ßƒ±lmayacak.');
    return;
  }

  for (const test of failedTests) {
    const testTitle = test.title.join(' > ');
    const firstFailure = test.results.find(r => r.status === 'failed');
    const errorMsg = firstFailure?.error?.message || 'Bilinmeyen hata';
    const stack = firstFailure?.error?.stack || '';

    const issueTitle = `üî¥ Test Failed: ${testTitle}`;
    const issueBody = `
### Hatalƒ± Test: ${testTitle}

**Hata Mesajƒ±:**
\`\`\`
${errorMsg}
\`\`\`

**Stack Trace:**
\`\`\`
${stack}
\`\`\`

Rapor: [HTML Raporu G√∂r√ºnt√ºle](${process.env.REPORT_URL})
`;

    // Aynƒ± ba≈ülƒ±kta a√ßƒ±k issue varsa tekrar olu≈üturma
    const existingIssues = await octokit.rest.issues.listForRepo({
      owner: OWNER,
      repo: REPO,
      state: 'open',
      labels: 'automated-test',
    });

    const alreadyExists = existingIssues.data.some(issue => issue.title === issueTitle);
    if (alreadyExists) {
      console.log(`Issue zaten mevcut: ${issueTitle}`);
      continue;
    }

    // Yeni issue olu≈ütur
    await octokit.rest.issues.create({
      owner: OWNER,
      repo: REPO,
      title: issueTitle,
      body: issueBody,
      labels: ['automated-test', 'bug'],
    });

    console.log(`Yeni issue olu≈üturuldu: ${issueTitle}`);
  }
})();
